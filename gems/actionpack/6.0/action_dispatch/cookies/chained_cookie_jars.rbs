# !!! GENERATED CODE !!!
# Please see generators/rails-generator

module ActionDispatch::Cookies::ChainedCookieJars
  # Returns a jar that'll automatically set the assigned cookies to have an expiration date 20 years from now. Example:
  #
  #   cookies.permanent[:prefers_open_id] = true
  #   # => Set-Cookie: prefers_open_id=true; path=/; expires=Sun, 16-Dec-2029 03:24:16 GMT
  #
  # This jar is only meant for writing. You'll read permanent cookies through the regular accessor.
  #
  # This jar allows chaining with the signed jar as well, so you can set permanent, signed cookies. Examples:
  #
  #   cookies.permanent.signed[:remember_me] = current_user.id
  #   # => Set-Cookie: remember_me=BAhU--848956038e692d7046deab32b7131856ab20e14e; path=/; expires=Sun, 16-Dec-2029 03:24:16 GMT
  def permanent: () -> untyped
  # Returns a jar that'll automatically generate a signed representation of cookie value and verify it when reading from
  # the cookie again. This is useful for creating cookies with values that the user is not supposed to change. If a signed
  # cookie was tampered with by the user (or a 3rd party), +nil+ will be returned.
  #
  # This jar requires that you set a suitable secret for the verification on your app's +secret_key_base+.
  #
  # Example:
  #
  #   cookies.signed[:discount] = 45
  #   # => Set-Cookie: discount=BAhpMg==--2c1c6906c90a3bc4fd54a51ffb41dffa4bf6b5f7; path=/
  #
  #   cookies.signed[:discount] # => 45
  def signed: () -> untyped
  # Returns a jar that'll automatically encrypt cookie values before sending them to the client and will decrypt them for read.
  # If the cookie was tampered with by the user (or a 3rd party), +nil+ will be returned.
  #
  # If +config.action_dispatch.encrypted_cookie_salt+ and +config.action_dispatch.encrypted_signed_cookie_salt+
  # are both set, legacy cookies encrypted with HMAC AES-256-CBC will be transparently upgraded.
  #
  # This jar requires that you set a suitable secret for the verification on your app's +secret_key_base+.
  #
  # Example:
  #
  #   cookies.encrypted[:discount] = 45
  #   # => Set-Cookie: discount=DIQ7fw==--K3n//8vvnSbGq9dA--7Xh91HfLpwzbj1czhBiwOg==; path=/
  #
  #   cookies.encrypted[:discount] # => 45
  def encrypted: () -> untyped
  # Returns the +signed+ or +encrypted+ jar, preferring +encrypted+ if +secret_key_base+ is set.
  # Used by ActionDispatch::Session::CookieStore to avoid the need to introduce new cookie stores.
  def signed_or_encrypted: () -> untyped
  private def upgrade_legacy_hmac_aes_cbc_cookies?: () -> untyped
  private def encrypted_cookie_cipher: () -> untyped
  private def signed_cookie_digest: () -> untyped
end
