# !!! GENERATED CODE !!!
# Please see generators/rails-generator

class Mime::Type
  def self.register_callback: () ?{ () -> untyped } -> untyped
  def self.lookup: (untyped string) -> untyped
  def self.lookup_by_extension: (untyped extension) -> untyped
  # Registers an alias that's not used on MIME type lookup, but can be referenced directly. Especially useful for
  # rendering different HTML versions depending on the user agent, like an iPhone.
  def self.register_alias: (untyped string, untyped symbol, ?untyped extension_synonyms) -> untyped
  def self.register: (untyped string, untyped symbol, ?untyped mime_type_synonyms, ?untyped extension_synonyms, ?bool skip_lookup) -> untyped
  def self.parse: (untyped accept_header) -> (::Array[untyped] | untyped | untyped)
  def self.parse_trailing_star: (untyped accept_header) -> (untyped | nil)
  # For an input of <tt>'text'</tt>, returns <tt>[Mime[:json], Mime[:xml], Mime[:ics],
  # Mime[:html], Mime[:css], Mime[:csv], Mime[:js], Mime[:yaml], Mime[:text]</tt>.
  #
  # For an input of <tt>'application'</tt>, returns <tt>[Mime[:html], Mime[:js],
  # Mime[:xml], Mime[:yaml], Mime[:atom], Mime[:json], Mime[:rss], Mime[:url_encoded_form]</tt>.
  def self.parse_data_with_trailing_star: (untyped `type`) -> untyped
  # This method is opposite of register method.
  #
  # To unregister a MIME type:
  #
  #   Mime::Type.unregister(:mobile)
  def self.unregister: (untyped symbol) -> untyped
  def initialize: (untyped string, ?untyped? symbol, ?untyped synonyms) -> void
  def to_s: () -> untyped
  def to_str: () -> untyped
  def to_sym: () -> untyped
  def ref: () -> untyped
  def ===: (untyped list) -> untyped
  def ==: (untyped mime_type) -> (false | untyped)
  def eql?: (untyped other) -> untyped
  def =~: (untyped mime_type) -> (false | untyped)
  def match?: (untyped mime_type) -> (false | untyped)
  def html?: () -> untyped
  def all?: () -> false
  private def to_ary: () -> nil
  private def to_a: () -> nil
  private def method_missing: (untyped method, *untyped args) -> untyped
  private def respond_to_missing?: (untyped method, ?bool include_private) -> untyped
  attr_reader symbol: untyped
  attr_reader hash: untyped
  attr_reader string: untyped
  attr_reader synonyms: untyped
  MIME_NAME: String
  MIME_PARAMETER: String
  MIME_PARAMETER_KEY: String
  MIME_PARAMETER_VALUE: String
  MIME_REGEXP: Regexp
end
