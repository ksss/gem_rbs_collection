# !!! GENERATED CODE !!!
# Please see generators/rails-generator

module ActionController::Live
  def process: (untyped name) -> untyped
  def response_body=: (untyped body) -> untyped
  # Sends a stream to the browser, which is helpful when you're generating exports or other running data where you
  # don't want the entire file buffered in memory first. Similar to send_data, but where the data is generated live.
  #
  # Options:
  # * <tt>:filename</tt> - suggests a filename for the browser to use.
  # * <tt>:type</tt> - specifies an HTTP content type.
  #   You can specify either a string or a symbol for a registered type with <tt>Mime::Type.register</tt>, for example :json.
  #   If omitted, type will be inferred from the file extension specified in <tt>:filename</tt>.
  #   If no content type is registered for the extension, the default type 'application/octet-stream' will be used.
  # * <tt>:disposition</tt> - specifies whether the file will be shown inline or downloaded.
  #   Valid values are 'inline' and 'attachment' (default).
  #
  # Example of generating a csv export:
  #
  #    send_stream(filename: "subscribers.csv") do |stream|
  #      stream.write "email_address,updated_at\n"
  #
  #      @subscribers.find_each do |subscriber|
  #        stream.write "#{subscriber.email_address},#{subscriber.updated_at}\n"
  #      end
  #    end
  def send_stream: (filename: untyped, ?disposition: ::String, ?type: untyped?) { (untyped) -> untyped } -> untyped
  def new_controller_thread: () { () -> untyped } -> untyped
  private def log_error: (untyped exception) -> (nil | untyped)
  extend ActiveSupport::Concern
end
