# !!! GENERATED CODE !!!
# Please see generators/rails-generator

module ActionController::ParamsWrapper::ClassMethods
  def _set_wrapper_options: (untyped options) -> untyped
  # Sets the name of the wrapper key, or the model which +ParamsWrapper+
  # would use to determine the attribute names from.
  #
  # ==== Examples
  #   wrap_parameters format: :xml
  #     # enables the parameter wrapper for XML format
  #
  #   wrap_parameters :person
  #     # wraps parameters into +params[:person]+ hash
  #
  #   wrap_parameters Person
  #     # wraps parameters by determining the wrapper key from Person class
  #     # (+person+, in this case) and the list of attribute names
  #
  #   wrap_parameters include: [:username, :title]
  #     # wraps only +:username+ and +:title+ attributes from parameters.
  #
  #   wrap_parameters false
  #     # disables parameters wrapping for this controller altogether.
  #
  # ==== Options
  # * <tt>:format</tt> - The list of formats in which the parameters wrapper
  #   will be enabled.
  # * <tt>:include</tt> - The list of attribute names which parameters wrapper
  #   will wrap into a nested hash.
  # * <tt>:exclude</tt> - The list of attribute names which parameters wrapper
  #   will exclude from a nested hash.
  def wrap_parameters: (untyped name_or_model_or_options, ?::Hash[untyped, untyped] options) -> untyped
  # Sets the default wrapper key or model which will be used to determine
  # wrapper key and attribute names. Called automatically when the
  # module is inherited.
  def inherited: (untyped klass) -> untyped
end
