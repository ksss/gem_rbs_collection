# !!! GENERATED CODE !!!
# Please see generators/rails-generator

module ActionView::ViewPaths
  def self.get_view_paths: (untyped klass) -> untyped
  def self.set_view_paths: (untyped klass, untyped paths) -> untyped
  def self.all_view_paths: () -> untyped
  # The prefixes used in render "foo" shortcuts.
  def _prefixes: () -> untyped
  # LookupContext is the object responsible for holding all
  # information required for looking up templates, i.e. view paths and
  # details. Check ActionView::LookupContext for more information.
  def lookup_context: () -> untyped
  def details_for_lookup: () -> ::Hash[untyped, untyped]
  # Append a path to the list of view paths for the current LookupContext.
  #
  # ==== Parameters
  # * <tt>path</tt> - If a String is provided, it gets converted into
  #   the default view path. You may also provide a custom view path
  #   (see ActionView::PathSet for more information)
  def append_view_path: (untyped path) -> untyped
  # Prepend a path to the list of view paths for the current LookupContext.
  #
  # ==== Parameters
  # * <tt>path</tt> - If a String is provided, it gets converted into
  #   the default view path. You may also provide a custom view path
  #   (see ActionView::PathSet for more information)
  def prepend_view_path: (untyped path) -> untyped
  # defined by `delegate` to: untyped#lookup_context
  def template_exists?: (*untyped, **untyped) -> untyped
  # defined by `delegate` to: untyped#lookup_context
  def any_templates?: (*untyped, **untyped) -> untyped
  # defined by `delegate` to: untyped#lookup_context
  def view_paths: (*untyped, **untyped) -> untyped
  # defined by `delegate` to: untyped#lookup_context
  def formats: (*untyped, **untyped) -> untyped
  # defined by `delegate` to: untyped#lookup_context
  def formats=: (*untyped, **untyped) -> untyped
  # defined by `delegate` to: untyped#lookup_context
  def locale: (*untyped, **untyped) -> untyped
  # defined by `delegate` to: untyped#lookup_context
  def locale=: (*untyped, **untyped) -> untyped
end
