# !!! GENERATED CODE !!!
# Please see generators/rails-generator

module ActiveModel::Lint::Tests
  # Passes if the object's model responds to <tt>to_key</tt> and if calling
  # this method returns +nil+ when the object is not persisted.
  # Fails otherwise.
  #
  # <tt>to_key</tt> returns an Enumerable of all (primary) key attributes
  # of the model, and is used to a generate unique DOM id for the object.
  def test_to_key: () -> untyped

  # Passes if the object's model responds to <tt>to_param</tt> and if
  # calling this method returns +nil+ when the object is not persisted.
  # Fails otherwise.
  #
  # <tt>to_param</tt> is used to represent the object's key in URLs.
  # Implementers can decide to either raise an exception or provide a
  # default in case the record uses a composite primary key. There are no
  # tests for this behavior in lint because it doesn't make sense to force
  # any of the possible implementation strategies on the implementer.
  def test_to_param: () -> untyped

  # Passes if the object's model responds to <tt>to_partial_path</tt> and if
  # calling this method returns a string. Fails otherwise.
  #
  # <tt>to_partial_path</tt> is used for looking up partials. For example,
  # a BlogPost model might return "blog_posts/blog_post".
  def test_to_partial_path: () -> untyped

  # Passes if the object's model responds to <tt>persisted?</tt> and if
  # calling this method returns either +true+ or +false+. Fails otherwise.
  #
  # <tt>persisted?</tt> is used when calculating the URL for an object.
  # If the object is not persisted, a form for that object, for instance,
  # will route to the create action. If it is persisted, a form for the
  # object will route to the update action.
  def test_persisted?: () -> untyped

  # Passes if the object's model responds to <tt>model_name</tt> both as
  # an instance method and as a class method, and if calling this method
  # returns a string with some convenience methods: <tt>:human</tt>,
  # <tt>:singular</tt> and <tt>:plural</tt>.
  #
  # Check ActiveModel::Naming for more information.
  def test_model_naming: () -> untyped

  # Passes if the object's model responds to <tt>errors</tt> and if calling
  # <tt>[](attribute)</tt> on the result of this method returns an array.
  # Fails otherwise.
  #
  # <tt>errors[attribute]</tt> is used to retrieve the errors of a model
  # for a given attribute. If errors are present, the method should return
  # an array of strings that are the errors for the attribute in question.
  # If localization is used, the strings should be localized for the current
  # locale. If no error is present, the method should return an empty array.
  def test_errors_aref: () -> untyped

  private def model: () -> untyped

  private def assert_boolean: (untyped result, untyped name) -> untyped
end
