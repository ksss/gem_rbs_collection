# !!! GENERATED CODE !!!
# Please see generators/rails-generator

module ActiveModel::SecurePassword::InstanceMethodsOnActivation
  # Returns +self+ if the password is correct, otherwise +false+.
  #
  #   class User < ActiveRecord::Base
  #     has_secure_password validations: false
  #   end
  #
  #   user = User.new(name: 'david', password: 'mUc3m00RsqyRe')
  #   user.save
  #   user.authenticate('notright')      # => false
  #   user.authenticate('mUc3m00RsqyRe') # => user
  def authenticate: (untyped unencrypted_password) -> untyped

  # Encrypts the password into the +password_digest+ attribute, only if the
  # new password is not empty.
  #
  #   class User < ActiveRecord::Base
  #     has_secure_password validations: false
  #   end
  #
  #   user = User.new
  #   user.password = nil
  #   user.password_digest # => nil
  #   user.password = 'mUc3m00RsqyRe'
  #   user.password_digest # => "$2a$10$4LEA7r4YmNHtvlAvHhsYAeZmk/xeUVtMTYqwIvYY76EW5GUqDiP4."
  def password=: (untyped unencrypted_password) -> (untyped | untyped | nil)

  def password_confirmation=: (untyped unencrypted_password) -> untyped

  attr_reader password: untyped
end
