# !!! GENERATED CODE !!!
# Please see generators/rails-generator

class ActiveModel::EachValidator < ::ActiveModel::Validator
  # Returns a new validator instance. All options will be available via the
  # +options+ reader, however the <tt>:attributes</tt> option will be removed
  # and instead be made available through the +attributes+ reader.
  def initialize: (untyped options) -> void
  # Performs validation on the supplied record. By default this will call
  # +validate_each+ to determine validity therefore subclasses should
  # override +validate_each+ with validation logic.
  def validate: (untyped record) -> untyped
  # Override this method in subclasses with the validation logic, adding
  # errors to the records +errors+ array where necessary.
  def validate_each: (untyped record, untyped attribute, untyped value) -> untyped
  # Hook method that gets called by the initializer allowing verification
  # that the arguments supplied are valid. You could for example raise an
  # +ArgumentError+ when invalid options are supplied.
  def check_validity!: () -> nil
  private def prepare_value_for_validation: (untyped value, untyped record, untyped attr_name) -> untyped
  attr_reader attributes: untyped
end
