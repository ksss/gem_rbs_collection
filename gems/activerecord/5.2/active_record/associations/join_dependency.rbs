# !!! GENERATED CODE !!!
# Please see generators/rails-generator

class ActiveRecord::Associations::JoinDependency
  def self.make_tree: (untyped associations) -> untyped
  def self.walk_tree: (untyped associations, untyped hash) -> untyped
  def initialize: (untyped base, untyped table, untyped associations) -> void
  def reflections: () -> untyped
  def join_constraints: (untyped joins_to_add, untyped join_type, untyped alias_tracker) -> untyped
  def instantiate: (untyped result_set) ?{ () -> untyped } -> untyped
  def apply_column_aliases: (untyped relation) -> untyped
  private def aliases: () -> untyped
  private def construct_tables!: (untyped join_root) -> untyped
  private def make_join_constraints: (untyped join_root, untyped join_type) -> untyped
  private def make_constraints: (untyped parent, untyped child, ?untyped join_type) -> untyped
  private def table_aliases_for: (untyped parent, untyped node) -> untyped
  private def table_alias_for: (untyped reflection, untyped parent, untyped join) -> untyped
  private def walk: (untyped left, untyped right) -> untyped
  private def find_reflection: (untyped klass, untyped name) -> untyped
  private def build: (untyped associations, untyped base_klass) -> untyped
  private def construct: (untyped ar_parent, untyped parent, untyped row, untyped rs, untyped seen, untyped model_cache, untyped aliases) -> (nil | untyped)
  private def construct_model: (untyped record, untyped node, untyped row, untyped model_cache, untyped id, untyped aliases) -> untyped
  attr_reader alias_tracker: untyped
  attr_reader join_root: untyped
end
