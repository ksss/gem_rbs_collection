# !!! GENERATED CODE !!!
# Please see generators/rails-generator

class ActiveRecord::Base
  include ActiveRecord::Core
  include ActiveRecord::Persistence
  include ActiveRecord::ReadonlyAttributes
  include ActiveRecord::ModelSchema
  include ActiveRecord::Inheritance
  include ActiveRecord::Scoping
  include ActiveRecord::Scoping::Default
  include ActiveRecord::Scoping::Named
  include ActiveRecord::Sanitization
  include ActiveRecord::AttributeAssignment
  include ActiveModel::Conversion
  include ActiveRecord::Integration
  include ActiveRecord::Validations
  include ActiveModel::Validations
  include ActiveSupport::Callbacks
  include ActiveModel::Validations::HelperMethods
  include ActiveRecord::CounterCache
  include ActiveRecord::Attributes
  include ActiveRecord::Locking::Optimistic
  include ActiveRecord::Locking::Pessimistic
  include ActiveRecord::AttributeMethods
  include ActiveModel::AttributeMethods
  include ActiveRecord::Base::GeneratedAttributeMethods
  include ActiveRecord::Base::GeneratedAssociationMethods
  include ActiveRecord::AttributeMethods::Read
  include ActiveRecord::AttributeMethods::Write
  include ActiveRecord::AttributeMethods::BeforeTypeCast
  include ActiveRecord::AttributeMethods::Query
  include ActiveRecord::AttributeMethods::PrimaryKey
  include ActiveRecord::AttributeMethods::TimeZoneConversion
  include ActiveRecord::AttributeMethods::Dirty
  include ActiveModel::Dirty
  include ActiveRecord::AttributeMethods::Serialization
  include ActiveRecord::Callbacks
  include ActiveModel::Validations::Callbacks
  include ActiveRecord::Timestamp
  include ActiveRecord::Associations
  include ActiveModel::SecurePassword
  include ActiveRecord::AutosaveAssociation
  include ActiveRecord::NestedAttributes
  include ActiveRecord::Transactions
  include ActiveRecord::TouchLater
  include ActiveRecord::NoTouching
  include ActiveRecord::Reflection
  include ActiveRecord::Serialization
  include ActiveModel::Serializers::JSON
  include ActiveRecord::Store
  include ActiveRecord::SecureToken
  include ActiveRecord::SignedId
  include ActiveRecord::Suppressor
  extend ActiveModel::Naming
  extend ActiveSupport::Benchmarkable
  extend ActiveSupport::DescendantsTracker
  extend ActiveRecord::ConnectionHandling
  extend ActiveRecord::QueryCache::ClassMethods
  extend ActiveRecord::Querying
  extend ActiveRecord::Translation
  extend ActiveRecord::DynamicMatchers
  extend ActiveRecord::DelegatedType
  extend ActiveRecord::Explain
  extend ActiveRecord::Enum
  extend ActiveRecord::Delegation::DelegateCache
  extend ActiveRecord::Aggregations::ClassMethods
  extend ActiveRecord::Core::ClassMethods
  extend ActiveRecord::Persistence::ClassMethods
  extend ActiveRecord::ReadonlyAttributes::ClassMethods
  extend ActiveRecord::ModelSchema::ClassMethods
  extend ActiveRecord::Inheritance::ClassMethods
  extend ActiveRecord::Scoping::ClassMethods
  extend ActiveRecord::Scoping::Default::ClassMethods
  extend ActiveRecord::Scoping::Named::ClassMethods
  extend ActiveRecord::Sanitization::ClassMethods
  extend ActiveModel::Conversion::ClassMethods
  extend ActiveRecord::Integration::ClassMethods
  extend ActiveModel::Validations::ClassMethods
  extend ActiveModel::Callbacks
  extend ActiveSupport::Callbacks::ClassMethods
  extend ActiveModel::Translation
  extend ActiveModel::Validations::HelperMethods
  extend ActiveRecord::Validations::ClassMethods
  extend ActiveRecord::CounterCache::ClassMethods
  extend ActiveRecord::Attributes::ClassMethods
  extend ActiveRecord::Locking::Optimistic::ClassMethods
  extend ActiveModel::AttributeMethods::ClassMethods
  extend ActiveRecord::AttributeMethods::ClassMethods
  extend ActiveRecord::AttributeMethods::Read::ClassMethods
  extend ActiveRecord::AttributeMethods::Write::ClassMethods
  extend ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods
  extend ActiveRecord::AttributeMethods::TimeZoneConversion::ClassMethods
  extend ActiveRecord::AttributeMethods::Serialization::ClassMethods
  extend ActiveRecord::Callbacks::ClassMethods
  extend ActiveModel::Validations::Callbacks::ClassMethods
  extend ActiveRecord::Timestamp::ClassMethods
  extend ActiveRecord::Associations::ClassMethods
  extend ActiveModel::SecurePassword::ClassMethods
  extend ActiveRecord::AutosaveAssociation::ClassMethods
  extend ActiveRecord::NestedAttributes::ClassMethods
  extend ActiveRecord::Transactions::ClassMethods
  extend ActiveRecord::NoTouching::ClassMethods
  extend ActiveRecord::Reflection::ClassMethods
  extend ActiveRecord::Store::ClassMethods
  extend ActiveRecord::SecureToken::ClassMethods
  extend ActiveRecord::SignedId::ClassMethods
  extend ActiveRecord::Suppressor::ClassMethods
  attr_accessor validation_context: untyped
  attr_accessor self.local_stored_attributes: untyped
  def self.logger: () -> untyped
  def logger: () -> untyped
  def self.verbose_query_logs: () -> untyped
  def verbose_query_logs: () -> untyped
  def self.queues: () -> untyped
  def self.default_timezone: () -> untyped
  def default_timezone: () -> untyped
  def self.schema_format: () -> untyped
  def schema_format: () -> untyped
  def self.error_on_ignored_order: () -> untyped
  def error_on_ignored_order: () -> untyped
  def self.timestamped_migrations: () -> untyped
  def timestamped_migrations: () -> untyped
  def self.dump_schema_after_migration: () -> untyped
  def dump_schema_after_migration: () -> untyped
  def self.dump_schemas: () -> untyped
  def dump_schemas: () -> untyped
  def self.warn_on_records_fetched_greater_than: () -> untyped
  def warn_on_records_fetched_greater_than: () -> untyped
  def self.suppress_multiple_database_warning: () -> untyped
  def suppress_multiple_database_warning: () -> untyped
  def self.maintain_test_schema: () -> untyped
  def self.action_on_strict_loading_violation: () -> untyped
  def self.writing_role: () -> untyped
  def self.reading_role: () -> untyped
  def self.has_many_inversing: () -> untyped
  def self.legacy_connection_handling: () -> untyped
  def legacy_connection_handling: () -> untyped
  def self.use_yaml_unsafe_load: () -> untyped
  def use_yaml_unsafe_load: () -> untyped
  def self.yaml_column_permitted_classes: () -> untyped
  def yaml_column_permitted_classes: () -> untyped
  def self.primary_key_prefix_type: () -> untyped
  def primary_key_prefix_type: () -> untyped
  def self.time_zone_aware_attributes: () -> untyped
  def time_zone_aware_attributes: () -> untyped
  def self.index_nested_attribute_errors: () -> untyped
  def index_nested_attribute_errors: () -> untyped
  def self.signed_id_verifier_secret: () -> untyped
  def signed_id_verifier_secret: () -> untyped
  def self.logger=: (untyped val) -> untyped
  def self.verbose_query_logs=: (untyped val) -> untyped
  def self.queues=: (untyped val) -> untyped
  def self.default_timezone=: (untyped val) -> untyped
  def self.schema_format=: (untyped val) -> untyped
  def self.error_on_ignored_order=: (untyped val) -> untyped
  def self.timestamped_migrations=: (untyped val) -> untyped
  def self.dump_schema_after_migration=: (untyped val) -> untyped
  def self.dump_schemas=: (untyped val) -> untyped
  def self.warn_on_records_fetched_greater_than=: (untyped val) -> untyped
  def self.suppress_multiple_database_warning=: (untyped val) -> untyped
  def self.maintain_test_schema=: (untyped val) -> untyped
  def self.action_on_strict_loading_violation=: (untyped val) -> untyped
  def self.writing_role=: (untyped val) -> untyped
  def self.reading_role=: (untyped val) -> untyped
  def self.has_many_inversing=: (untyped val) -> untyped
  def self.legacy_connection_handling=: (untyped val) -> untyped
  def self.use_yaml_unsafe_load=: (untyped val) -> untyped
  def self.yaml_column_permitted_classes=: (untyped val) -> untyped
  def self.primary_key_prefix_type=: (untyped val) -> untyped
  def self.time_zone_aware_attributes=: (untyped val) -> untyped
  def self.index_nested_attribute_errors=: (untyped val) -> untyped
  def self.signed_id_verifier_secret=: (untyped val) -> untyped
  # defined by `delegate` to: #class
  def model_name: (*untyped, **untyped) -> untyped
  # defined by `delegate` to: #class
  def type_for_attribute: (*untyped, **untyped) -> untyped
  # defined by `delegate` to: #class
  def column_for_attribute: (*untyped, **untyped) -> untyped
  def self.defined_enums: () -> untyped
  def self.defined_enums?: () -> bool
  def self.defined_enums=: (untyped value) -> untyped
  def defined_enums: () -> untyped
  def defined_enums?: () -> bool
  def self.destroy_association_async_job: () -> untyped
  def self.destroy_association_async_job=: (untyped value) -> untyped
  def destroy_association_async_job: () -> untyped
  def self.belongs_to_required_by_default: () -> untyped
  def self.belongs_to_required_by_default?: () -> bool
  def self.belongs_to_required_by_default=: (untyped value) -> untyped
  def self.strict_loading_by_default: () -> untyped
  def self.strict_loading_by_default?: () -> bool
  def self.strict_loading_by_default=: (untyped value) -> untyped
  def self.default_connection_handler: () -> untyped
  def self.default_connection_handler?: () -> bool
  def self.default_connection_handler=: (untyped value) -> untyped
  def default_connection_handler: () -> untyped
  def default_connection_handler?: () -> bool
  def self.default_role: () -> untyped
  def self.default_role?: () -> bool
  def self.default_role=: (untyped value) -> untyped
  def default_role: () -> untyped
  def default_role?: () -> bool
  def self.default_shard: () -> untyped
  def self.default_shard?: () -> bool
  def self.default_shard=: (untyped value) -> untyped
  def default_shard: () -> untyped
  def default_shard?: () -> bool
  def self.table_name_prefix: () -> untyped
  def self.table_name_prefix?: () -> bool
  def self.table_name_prefix=: (untyped value) -> untyped
  def table_name_prefix: () -> untyped
  def table_name_prefix?: () -> bool
  def self.table_name_suffix: () -> untyped
  def self.table_name_suffix?: () -> bool
  def self.table_name_suffix=: (untyped value) -> untyped
  def table_name_suffix: () -> untyped
  def table_name_suffix?: () -> bool
  def self.schema_migrations_table_name: () -> untyped
  def self.schema_migrations_table_name?: () -> bool
  def self.schema_migrations_table_name=: (untyped value) -> untyped
  def self.internal_metadata_table_name: () -> untyped
  def self.internal_metadata_table_name?: () -> bool
  def self.internal_metadata_table_name=: (untyped value) -> untyped
  def self.pluralize_table_names: () -> untyped
  def self.pluralize_table_names?: () -> bool
  def self.pluralize_table_names=: (untyped value) -> untyped
  def pluralize_table_names: () -> untyped
  def pluralize_table_names?: () -> bool
  def self.implicit_order_column: () -> untyped
  def self.implicit_order_column?: () -> bool
  def self.implicit_order_column=: (untyped value) -> untyped
  def self.immutable_strings_by_default: () -> untyped
  def self.immutable_strings_by_default?: () -> bool
  def self.immutable_strings_by_default=: (untyped value) -> untyped
  def self.store_full_class_name: () -> untyped
  def self.store_full_class_name?: () -> bool
  def self.store_full_class_name=: (untyped value) -> untyped
  def store_full_class_name: () -> untyped
  def store_full_class_name?: () -> bool
  def self.store_full_sti_class: () -> untyped
  def self.store_full_sti_class?: () -> bool
  def self.store_full_sti_class=: (untyped value) -> untyped
  def store_full_sti_class: () -> untyped
  def store_full_sti_class?: () -> bool
  def self.default_scopes: () -> untyped
  def self.default_scopes=: (untyped value) -> untyped
  def default_scopes: () -> untyped
  def self.default_scope_override: () -> untyped
  def self.default_scope_override=: (untyped value) -> untyped
  def default_scope_override: () -> untyped
  def self.cache_timestamp_format: () -> untyped
  def self.cache_timestamp_format?: () -> bool
  def self.cache_timestamp_format=: (untyped value) -> untyped
  def cache_timestamp_format: () -> untyped
  def cache_timestamp_format?: () -> bool
  def self.cache_versioning: () -> untyped
  def self.cache_versioning?: () -> bool
  def self.cache_versioning=: (untyped value) -> untyped
  def cache_versioning: () -> untyped
  def cache_versioning?: () -> bool
  def self.collection_cache_versioning: () -> untyped
  def self.collection_cache_versioning?: () -> bool
  def self.collection_cache_versioning=: (untyped value) -> untyped
  def collection_cache_versioning: () -> untyped
  def collection_cache_versioning?: () -> bool
  def self.lock_optimistically: () -> untyped
  def self.lock_optimistically?: () -> bool
  def self.lock_optimistically=: (untyped value) -> untyped
  def lock_optimistically: () -> untyped
  def lock_optimistically?: () -> bool
  def self.attribute_aliases: () -> untyped
  def self.attribute_aliases?: () -> bool
  def self.attribute_aliases=: (untyped value) -> untyped
  def attribute_aliases: () -> untyped
  def attribute_aliases?: () -> bool
  def self.attribute_method_matchers: () -> untyped
  def self.attribute_method_matchers?: () -> bool
  def self.attribute_method_matchers=: (untyped value) -> untyped
  def attribute_method_matchers: () -> untyped
  def attribute_method_matchers?: () -> bool
  def self.skip_time_zone_conversion_for_attributes: () -> untyped
  def self.skip_time_zone_conversion_for_attributes?: () -> bool
  def self.skip_time_zone_conversion_for_attributes=: (untyped value) -> untyped
  def skip_time_zone_conversion_for_attributes: () -> untyped
  def skip_time_zone_conversion_for_attributes?: () -> bool
  def self.time_zone_aware_types: () -> untyped
  def self.time_zone_aware_types?: () -> bool
  def self.time_zone_aware_types=: (untyped value) -> untyped
  def time_zone_aware_types: () -> untyped
  def time_zone_aware_types?: () -> bool
  def self.partial_writes: () -> untyped
  def self.partial_writes?: () -> bool
  def self.partial_writes=: (untyped value) -> untyped
  def partial_writes: () -> untyped
  def partial_writes?: () -> bool
  def self.record_timestamps: () -> untyped
  def self.record_timestamps?: () -> bool
  def self.record_timestamps=: (untyped value) -> untyped
  def record_timestamps: () -> untyped
  def record_timestamps?: () -> bool
  def record_timestamps=: (untyped value) -> untyped
  def self.nested_attributes_options: () -> untyped
  def self.nested_attributes_options?: () -> bool
  def self.nested_attributes_options=: (untyped value) -> untyped
  def nested_attributes_options: () -> untyped
  def nested_attributes_options?: () -> bool
  def self.aggregate_reflections: () -> untyped
  def self.aggregate_reflections?: () -> bool
  def self.aggregate_reflections=: (untyped value) -> untyped
  def aggregate_reflections: () -> untyped
  def aggregate_reflections?: () -> bool
  def self.include_root_in_json: () -> untyped
  def self.include_root_in_json?: () -> bool
  def self.include_root_in_json=: (untyped value) -> untyped
  def include_root_in_json: () -> untyped
  def include_root_in_json?: () -> bool
  def self.attachment_reflections: () -> untyped
  def self.attachment_reflections?: () -> bool
  def self.attachment_reflections=: (untyped value) -> untyped
  def attachment_reflections: () -> untyped
  def attachment_reflections?: () -> bool
end
