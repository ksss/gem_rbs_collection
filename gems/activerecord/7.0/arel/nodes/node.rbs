# !!! GENERATED CODE !!!
# Please see generators/rails-generator

class Arel::Nodes::Node
  # #
  # Factory method to create a Nodes::Not node that has the recipient of
  # the caller as a child.
  def not: () -> untyped
  # #
  # Factory method to create a Nodes::Grouping node that has an Nodes::Or
  # node as a child.
  def or: (untyped right) -> untyped
  # #
  # Factory method to create an Nodes::And node.
  def and: (untyped right) -> untyped
  def invert: () -> untyped
  # FIXME: this method should go away.  I don't like people calling
  # to_sql on non-head nodes.  This forces us to walk the AST until we
  # can find a node that has a "relation" member.
  #
  # Maybe we should just use `Table.engine`?  :'(
  def to_sql: (?untyped engine) -> untyped
  def fetch_attribute: () -> nil
  def equality?: () -> false
  include Arel::FactoryMethods
end
