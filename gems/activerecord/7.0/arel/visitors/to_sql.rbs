# !!! GENERATED CODE !!!
# Please see generators/rails-generator

class Arel::Visitors::ToSql < ::Arel::Visitors::Visitor
  def initialize: (untyped connection) -> void
  def compile: (untyped node, ?untyped collector) -> untyped
  private def visit_Arel_Nodes_DeleteStatement: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_UpdateStatement: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_InsertStatement: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_Exists: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_Casted: (untyped o, untyped collector) -> untyped
  alias visit_Arel_Nodes_Quoted visit_Arel_Nodes_Casted
  private def visit_Arel_Nodes_True: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_False: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_ValuesList: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_SelectStatement: (untyped o, untyped collector) -> untyped
  # The Oracle enhanced adapter uses this private method,
  # see https://github.com/rsim/oracle-enhanced/issues/2186
  private def visit_Arel_Nodes_SelectOptions: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_SelectCore: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_OptimizerHints: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_Comment: (untyped o, untyped collector) -> untyped
  private def collect_nodes_for: (untyped nodes, untyped collector, untyped spacer, ?::String connector) -> (untyped | nil)
  private def visit_Arel_Nodes_Bin: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_Distinct: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_DistinctOn: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_With: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_WithRecursive: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_Union: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_UnionAll: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_Intersect: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_Except: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_NamedWindow: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_Window: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_Filter: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_Rows: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_Range: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_Preceding: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_Following: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_CurrentRow: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_Over: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_Offset: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_Limit: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_Lock: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_Grouping: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_HomogeneousIn: (untyped o, untyped collector) -> untyped
  private def visit_Arel_SelectManager: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_Ascending: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_Descending: (untyped o, untyped collector) -> untyped
  # NullsFirst is available on all but MySQL, where it is redefined.
  private def visit_Arel_Nodes_NullsFirst: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_NullsLast: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_Group: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_NamedFunction: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_Extract: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_Count: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_Sum: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_Max: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_Min: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_Avg: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_TableAlias: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_Between: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_GreaterThanOrEqual: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_GreaterThan: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_LessThanOrEqual: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_LessThan: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_Matches: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_DoesNotMatch: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_JoinSource: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_Regexp: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_NotRegexp: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_StringJoin: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_FullOuterJoin: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_OuterJoin: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_RightOuterJoin: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_InnerJoin: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_On: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_Not: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Table: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_In: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_NotIn: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_And: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_Or: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_Assignment: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_Equality: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_IsNotDistinctFrom: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_IsDistinctFrom: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_NotEqual: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_As: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_Case: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_When: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_Else: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_UnqualifiedColumn: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Attributes_Attribute: (untyped o, untyped collector) -> untyped
  private def bind_block: () -> untyped
  private def visit_ActiveModel_Attribute: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_BindParam: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_SqlLiteral: (untyped o, untyped collector) -> untyped
  private def visit_Integer: (untyped o, untyped collector) -> untyped
  private def unsupported: (untyped o, untyped collector) -> untyped
  alias visit_ActiveSupport_Multibyte_Chars unsupported
  alias visit_ActiveSupport_StringInquirer unsupported
  alias visit_BigDecimal unsupported
  alias visit_Class unsupported
  alias visit_Date unsupported
  alias visit_DateTime unsupported
  alias visit_FalseClass unsupported
  alias visit_Float unsupported
  alias visit_Hash unsupported
  alias visit_NilClass unsupported
  alias visit_String unsupported
  alias visit_Symbol unsupported
  alias visit_Time unsupported
  alias visit_TrueClass unsupported
  private def visit_Arel_Nodes_InfixOperation: (untyped o, untyped collector) -> untyped
  private def visit_Arel_Nodes_UnaryOperation: (untyped o, untyped collector) -> untyped
  private def visit_Array: (untyped o, untyped collector) -> untyped
  alias visit_Set visit_Array
  private def quote: (untyped value) -> untyped
  private def quote_table_name: (untyped name) -> untyped
  private def quote_column_name: (untyped name) -> untyped
  private def sanitize_as_sql_comment: (untyped value) -> untyped
  private def collect_optimizer_hints: (untyped o, untyped collector) -> untyped
  private def maybe_visit: (untyped thing, untyped collector) -> untyped
  private def inject_join: (untyped list, untyped collector, untyped join_str) -> untyped
  private def unboundable?: (untyped value) -> untyped
  private def has_join_sources?: (untyped o) -> untyped
  private def has_limit_or_offset_or_orders?: (untyped o) -> untyped
  private def has_group_by_and_having?: (untyped o) -> untyped
  # The default strategy for an UPDATE with joins is to use a subquery. This doesn't work
  # on MySQL (even when aliasing the tables), but MySQL allows using JOIN directly in
  # an UPDATE statement, so in the MySQL visitor we redefine this to do that.
  private def prepare_update_statement: (untyped o) -> untyped
  alias prepare_delete_statement prepare_update_statement
  # FIXME: we should probably have a 2-pass visitor for this
  private def build_subselect: (untyped key, untyped o) -> untyped
  private def infix_value: (untyped o, untyped collector, untyped value) -> untyped
  private def infix_value_with_paren: (untyped o, untyped collector, untyped value, ?bool suppress_parens) -> untyped
  private def aggregate: (untyped name, untyped o, untyped collector) -> untyped
  private def is_distinct_from: (untyped o, untyped collector) -> untyped
  private def collect_ctes: (untyped children, untyped collector) -> untyped
end
