# !!! GENERATED CODE !!!
# Please see generators/rails-generator

class ActiveStorage::Attached::Many < ::ActiveStorage::Attached
  # Returns all the associated attachment records.
  #
  # All methods called on this proxy object that aren't listed here will automatically be delegated to +attachments+.
  def attachments: () -> untyped
  # Associates one or several attachments with the current record, saving them to the database.
  #
  #   document.images.attach(params[:images]) # Array of ActionDispatch::Http::UploadedFile objects
  #   document.images.attach(params[:signed_blob_id]) # Signed reference to blob from direct upload
  #   document.images.attach(io: File.open("/path/to/racecar.jpg"), filename: "racecar.jpg", content_type: "image/jpg")
  #   document.images.attach([ first_blob, second_blob ])
  def attach: (*untyped attachables) -> untyped
  # Returns true if any attachments has been made.
  #
  #   class Gallery < ActiveRecord::Base
  #     has_many_attached :photos
  #   end
  #
  #   Gallery.new.photos.attached? # => false
  def attached?: () -> untyped
  # Deletes associated attachments without purging them, leaving their respective blobs in place.
  def detach: () -> (untyped | nil)
end
