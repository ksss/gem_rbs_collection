# !!! GENERATED CODE !!!
# Please see generators/rails-generator

module ActiveSupport::CompareWithRange
  # Extends the default Range#=== to support range comparisons.
  #  (1..5) === (1..5) # => true
  #  (1..5) === (2..3) # => true
  #  (1..5) === (2..6) # => false
  #
  # The native Range#=== behavior is untouched.
  #  ('a'..'f') === ('c') # => true
  #  (5..9) === (11) # => false
  def ===: (untyped value) -> untyped

  # Extends the default Range#include? to support range comparisons.
  #  (1..5).include?(1..5) # => true
  #  (1..5).include?(2..3) # => true
  #  (1..5).include?(2..6) # => false
  #
  # The native Range#include? behavior is untouched.
  #  ('a'..'f').include?('c') # => true
  #  (5..9).include?(11) # => false
  def include?: (untyped value) -> untyped

  # Extends the default Range#cover? to support range comparisons.
  #  (1..5).cover?(1..5) # => true
  #  (1..5).cover?(2..3) # => true
  #  (1..5).cover?(2..6) # => false
  #
  # The native Range#cover? behavior is untouched.
  #  ('a'..'f').cover?('c') # => true
  #  (5..9).cover?(11) # => false
  def cover?: (untyped value) -> untyped
end
