# !!! GENERATED CODE !!!
# Please see generators/rails-generator

class ActiveSupport::TestCase < ::Minitest::Test
  # Sets the order in which test cases are run.
  #
  #   ActiveSupport::TestCase.test_order = :random # => :random
  #
  # Valid values are:
  # * +:random+   (to run tests in random order)
  # * +:parallel+ (to run tests in parallel)
  # * +:sorted+   (to run tests alphabetically by method name)
  # * +:alpha+    (equivalent to +:sorted+)
  def self.test_order=: (untyped new_order) -> untyped
  # Returns the order in which test cases are run.
  #
  #   ActiveSupport::TestCase.test_order # => :random
  #
  # Possible values are +:random+, +:parallel+, +:alpha+, +:sorted+.
  # Defaults to +:random+.
  def self.test_order: () -> untyped
  alias method_name name
  # test/unit backwards compatibility methods
  alias assert_raise assert_raises
  alias assert_not_empty refute_empty
  alias assert_not_equal refute_equal
  alias assert_not_in_delta refute_in_delta
  alias assert_not_in_epsilon refute_in_epsilon
  alias assert_not_includes refute_includes
  alias assert_not_instance_of refute_instance_of
  alias assert_not_kind_of refute_kind_of
  alias assert_no_match refute_match
  alias assert_not_nil refute_nil
  alias assert_not_operator refute_operator
  alias assert_not_predicate refute_predicate
  alias assert_not_respond_to refute_respond_to
  alias assert_not_same refute_same
  include ActiveSupport::Testing::TaggedLogging
  include ActiveSupport::Callbacks
  include ActiveSupport::Testing::Assertions
  include ActiveSupport::Testing::Deprecation
  include ActiveSupport::Testing::TimeHelpers
  include ActiveSupport::Testing::FileFixtures
  extend ActiveSupport::Callbacks::ClassMethods
  extend ActiveSupport::DescendantsTracker
  extend ActiveSupport::Testing::SetupAndTeardown::ClassMethods
  extend ActiveSupport::Testing::Declarative
  prepend ActiveSupport::Testing::SetupAndTeardown
  def self.file_fixture_path: () -> untyped
  def self.file_fixture_path?: () -> bool
  def self.file_fixture_path=: (untyped value) -> untyped
  def file_fixture_path: () -> untyped
  def file_fixture_path?: () -> bool
end
