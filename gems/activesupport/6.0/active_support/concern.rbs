# !!! GENERATED CODE !!!
# Please see generators/rails-generator

module ActiveSupport::Concern
  def self.extended: (untyped base) -> untyped
  def append_features: (untyped base) -> (false | false | untyped)
  # Evaluate given block in context of base class,
  # so that you can write class macros here.
  # When you define more than one +included+ block, it raises an exception.
  def included: (?untyped? base) ?{ () -> untyped } -> (untyped | nil | untyped | untyped)
  # Define class methods from given block.
  # You can define private class methods as well.
  #
  #   module Example
  #     extend ActiveSupport::Concern
  #
  #     class_methods do
  #       def foo; puts 'foo'; end
  #
  #       private
  #         def bar; puts 'bar'; end
  #     end
  #   end
  #
  #   class Buzz
  #     include Example
  #   end
  #
  #   Buzz.foo # => "foo"
  #   Buzz.bar # => private method 'bar' called for Buzz:Class(NoMethodError)
  def class_methods: () ?{ () -> untyped } -> untyped
end
