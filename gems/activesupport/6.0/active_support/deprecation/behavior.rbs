# !!! GENERATED CODE !!!
# Please see generators/rails-generator

module ActiveSupport::Deprecation::Behavior
  # Returns the current behavior or if one isn't set, defaults to +:stderr+.
  def behavior: () -> untyped
  # Sets the behavior to the specified value. Can be a single value, array,
  # or an object that responds to +call+.
  #
  # Available behaviors:
  #
  # [+raise+]   Raise <tt>ActiveSupport::DeprecationException</tt>.
  # [+stderr+]  Log all deprecation warnings to +$stderr+.
  # [+log+]     Log all deprecation warnings to +Rails.logger+.
  # [+notify+]  Use +ActiveSupport::Notifications+ to notify +deprecation.rails+.
  # [+silence+] Do nothing.
  #
  # Setting behaviors only affects deprecations that happen after boot time.
  # Deprecation warnings raised by gems are not affected by this setting
  # because they happen before Rails boots up.
  #
  #   ActiveSupport::Deprecation.behavior = :stderr
  #   ActiveSupport::Deprecation.behavior = [:stderr, :log]
  #   ActiveSupport::Deprecation.behavior = MyCustomHandler
  #   ActiveSupport::Deprecation.behavior = ->(message, callstack, deprecation_horizon, gem_name) {
  #     # custom stuff
  #   }
  def behavior=: (untyped behavior) -> untyped
  private def arity_coerce: (untyped behavior) -> untyped
  attr_accessor debug: untyped
end
