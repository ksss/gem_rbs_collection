# !!! GENERATED CODE !!!
# Please see generators/rails-generator

class ActiveSupport::Cache::Entry
  def self.unpack: (untyped members) -> untyped
  # Creates a new cache entry for the specified value. Options supported are
  # +:compressed+, +:version+, +:expires_at+ and +:expires_in+.
  def initialize: (untyped value, ?compressed: bool, ?version: untyped?, ?expires_in: untyped?, ?expires_at: untyped?) -> void
  def value: () -> untyped
  def mismatched?: (untyped version) -> untyped
  # Checks if the entry is expired. The +expires_in+ parameter can override
  # the value set when the entry was created.
  def expired?: () -> untyped
  def expires_at: () -> (untyped | nil)
  def expires_at=: (untyped value) -> untyped
  # Returns the size of the cached value. This could be less than
  # <tt>value.bytesize</tt> if the data is compressed.
  def bytesize: () -> untyped
  def compressed?: () -> untyped
  def compressed: (untyped compress_threshold) -> (self | untyped)
  def local?: () -> false
  # Duplicates the value in a class. This is used by cache implementations that don't natively
  # serialize entries to protect against accidental cache modifications.
  def dup_value!: () -> (untyped | nil)
  def pack: () -> untyped
  private def uncompress: (untyped value) -> untyped
  attr_reader version: untyped
end
