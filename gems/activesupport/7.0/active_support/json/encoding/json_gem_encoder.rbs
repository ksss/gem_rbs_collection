# !!! GENERATED CODE !!!
# Please see generators/rails-generator

class ActiveSupport::JSON::Encoding::JSONGemEncoder
  def initialize: (?untyped? options) -> void
  # Encode the given object into a JSON string
  def encode: (untyped value) -> untyped
  # Convert an object into a "JSON-ready" representation composed of
  # primitives like Hash, Array, String, Numeric,
  # and +true+/+false+/+nil+.
  # Recursively calls #as_json to the object to recursively build a
  # fully JSON-ready object.
  #
  # This allows developers to implement #as_json without having to
  # worry about what base types of objects they are allowed to return
  # or having to remember to call #as_json recursively.
  #
  # Note: the +options+ hash passed to +object.to_json+ is only passed
  # to +object.as_json+, not any of this method's recursive +#as_json+
  # calls.
  private def jsonify: (untyped value) -> untyped
  # Encode a "jsonified" Ruby data structure using the JSON gem
  private def stringify: (untyped jsonified) -> untyped
  attr_reader options: untyped
end
