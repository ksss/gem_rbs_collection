# !!! GENERATED CODE !!!
# Please see generators/rails-generator

class ActiveSupport::Notifications::Event
  def initialize: (untyped name, untyped start, untyped ending, untyped transaction_id, untyped payload) -> void
  def record: () { (untyped) -> untyped } -> untyped
  # Record information at the time this event starts
  def start!: () -> untyped
  # Record information at the time this event finishes
  def finish!: () -> untyped
  # Returns the CPU time (in milliseconds) passed since the call to
  # +start!+ and the call to +finish!+
  def cpu_time: () -> untyped
  # Returns the idle time time (in milliseconds) passed since the call to
  # +start!+ and the call to +finish!+
  def idle_time: () -> untyped
  # Returns the number of allocations made since the call to +start!+ and
  # the call to +finish!+
  def allocations: () -> untyped
  # Returns the difference in milliseconds between when the execution of the
  # event started and when it ended.
  #
  #   ActiveSupport::Notifications.subscribe('wait') do |*args|
  #     @event = ActiveSupport::Notifications::Event.new(*args)
  #   end
  #
  #   ActiveSupport::Notifications.instrument('wait') do
  #     sleep 1
  #   end
  #
  #   @event.duration # => 1000.138
  def duration: () -> untyped
  def <<: (untyped event) -> untyped
  def parent_of?: (untyped event) -> untyped
  private def now: () -> untyped
  private def now_cpu: () -> ::Float
  private def now_allocations: () -> 0
  attr_accessor payload: untyped
  attr_reader name: untyped
  attr_reader time: untyped
  attr_reader end: untyped
  attr_reader transaction_id: untyped
  attr_reader children: untyped
end
