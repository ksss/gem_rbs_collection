# !!! GENERATED CODE !!!
# Please see generators/rails-generator

module Kernel : ::BasicObject
  # A shortcut to define a toplevel concern, not within a module.
  #
  # See Module::Concerning for more.
  def self?.concern: (untyped topic) ?{ () -> untyped } -> untyped
  # Sets $VERBOSE to +nil+ for the duration of the block and back to its original
  # value afterwards.
  #
  #   silence_warnings do
  #     value = noisy_call # no warning voiced
  #   end
  #
  #   noisy_call # warning voiced
  def self?.silence_warnings: () ?{ () -> untyped } -> untyped
  # Sets $VERBOSE to +true+ for the duration of the block and back to its
  # original value afterwards.
  def self?.enable_warnings: () ?{ () -> untyped } -> untyped
  # Sets $VERBOSE for the duration of the block and back to its original
  # value afterwards.
  def self?.with_warnings: (untyped flag) { () -> untyped } -> untyped
  # Blocks and ignores any exception passed as argument if raised within the block.
  #
  #   suppress(ZeroDivisionError) do
  #     1/0
  #     puts 'This code is NOT reached'
  #   end
  #
  #   puts 'This code gets executed and nothing related to ZeroDivisionError was seen'
  def self?.suppress: (*untyped exception_classes) { () -> untyped } -> untyped
  # class_eval on an object acts like +singleton_class.class_eval+.
  def class_eval: (*untyped args) ?{ () -> untyped } -> untyped
end
